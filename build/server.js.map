{"version":3,"sources":["../src/server.js"],"names":["app","router","express","Router","use","bodyParser","json","mongoose","connect","connection","once","console","log","route","get","req","res","send","Point","find","err","points","findById","params","id","point","post","body","save","then","status","catch","next","Error","title","responsible","description","severity","findByIdAndRemove","_id","port","process","env","PORT","listen"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\n\r\nimport Point from './models/point.js';\r\n\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\nmongoose.connect('mongodb+srv://admin:admin@cluster0-d5qot.mongodb.net/test?retryWrites=true');\r\n\r\nconst connection = mongoose.connection;\r\n\r\nconnection.once('open', () => {\r\n  console.log('MongoDB database connection established successfully!');\r\n});\r\n\r\napp.use('/', router);\r\n\r\nrouter.route('/').get((req, res) => {\r\n  res.send('success');\r\n});\r\n\r\nrouter.route('/points').get((req, res) => {\r\n  Point.find((err, points) => {\r\n    if (err)\r\n      console.log(err);\r\n    else\r\n      res.json(points);\r\n  });\r\n});\r\n\r\nrouter.route('/points/:id').get((req, res) => {\r\n  Point.findById(req.params.id, (err, point) => {\r\n    if (err)\r\n      console.log(err);\r\n    else\r\n      res.json(point);\r\n  })\r\n});\r\n\r\nrouter.route('/points/add').post((req, res) => {\r\n  let point = new Point(req.body);\r\n  point.save()\r\n    .then(point => {\r\n      res.status(200).json({ 'point': 'Added successfully' });\r\n    })\r\n    .catch(err => {\r\n      res.status(400).send('Failed to create new record');\r\n    });\r\n});\r\n\r\nrouter.route('/points/update/:id').post((req, res) => {\r\n  Point.findById(req.params.id, (err, point) => {\r\n    if (!point)\r\n      return next(new Error('Could not load Document'));\r\n    else {\r\n      point.title = req.body.title;\r\n      point.responsible = req.body.responsible;\r\n      point.description = req.body.description;\r\n      point.severity = req.body.severity;\r\n      point.status = req.body.status;\r\n\r\n      point.save().then(point => {\r\n        res.json('Update done');\r\n      }).catch(err => {\r\n        res.status(400).send('Update failed');\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\nrouter.route('/points/delete/:id').get((req, res) => {\r\n  Point.findByIdAndRemove({ _id: req.params.id }, (err, point) => {\r\n    if (err)\r\n      res.json(err);\r\n    else\r\n      res.json('Removed successfully');\r\n  });\r\n});\r\n\r\nlet port = process.env.PORT;\r\nif (port == null || port == \"\") {\r\n  port = 4000;\r\n}\r\n\r\napp.listen(port, () => console.log(`Express server running on port:` + port));\r\n\r\n"],"file":"server.js"}