{"version":3,"sources":["../src/server.js"],"names":["app","router","express","Router","use","bodyParser","json","mongoose","connect","connection","once","console","log","route","get","req","res","Issue","find","err","issues","findById","params","id","issue","post","body","save","then","status","catch","send","next","Error","title","responsible","description","severity","findByIdAndRemove","_id","port","process","env","PORT","listen"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\n\r\nimport Issue from './models/Issue';\r\n\r\nconst app = express();\r\nconst router = express.Router();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\nmongoose.connect('mongodb+srv://admin:admin@cluster0-d5qot.mongodb.net/test?retryWrites=true');\r\n\r\nconst connection = mongoose.connection;\r\n\r\nconnection.once('open', () => {\r\n    console.log('MongoDB database connection established successfully!');\r\n});\r\n\r\napp.use('/', router);\r\n\r\nrouter.route('/issues').get((req, res) => {\r\n  Issue.find((err, issues) => {\r\n      if (err)\r\n          console.log(err);\r\n      else\r\n          res.json(issues);\r\n  });\r\n});\r\n\r\nrouter.route('/issues/:id').get((req, res) => {\r\n  Issue.findById(req.params.id, (err, issue) => {\r\n      if (err)\r\n          console.log(err);\r\n      else\r\n          res.json(issue);\r\n  })\r\n});\r\n\r\nrouter.route('/issues/add').post((req, res) => {\r\n  let issue = new Issue(req.body);\r\n  issue.save()\r\n      .then(issue => {\r\n          res.status(200).json({'issue': 'Added successfully'});\r\n      })\r\n      .catch(err => {\r\n          res.status(400).send('Failed to create new record');\r\n      });\r\n});\r\n\r\nrouter.route('/issues/update/:id').post((req, res) => {\r\n  Issue.findById(req.params.id, (err, issue) => {\r\n      if (!issue)\r\n          return next(new Error('Could not load Document'));\r\n      else {\r\n          issue.title = req.body.title;\r\n          issue.responsible = req.body.responsible;\r\n          issue.description = req.body.description;\r\n          issue.severity = req.body.severity;\r\n          issue.status = req.body.status;\r\n\r\n          issue.save().then(issue => {\r\n              res.json('Update done');\r\n          }).catch(err => {\r\n              res.status(400).send('Update failed');\r\n          });\r\n      }\r\n  });\r\n});\r\n\r\nrouter.route('/issues/delete/:id').get((req, res) => {\r\n  Issue.findByIdAndRemove({_id: req.params.id}, (err, issue) => {\r\n      if (err)\r\n          res.json(err);\r\n      else\r\n          res.json('Removed successfully');\r\n  });\r\n});\r\n\r\nlet port = process.env.PORT;\r\nif (port == null || port == \"\") {\r\n  port = 4000;\r\n}\r\n\r\napp.listen(4000, () => console.log(`Express server running on port 4000`));\r\n\r\n"],"file":"server.js"}